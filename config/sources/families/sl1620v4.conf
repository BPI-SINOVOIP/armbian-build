#
# SPDX-License-Identifier: GPL-2.0
#
# Copyright (c) 2013-2023 Igor Pecovnik, igor@armbian.com
#
# This file is a part of the Armbian Build Framework
# https://github.com/armbian/build/
#
declare -g ARCH="arm64"
SERIALCON='ttyS0'
LINUXFAMILY=sl1680

KERNELSOURCE='https://github.com/BPI-SINOVOIP/pi-linux.git'
declare -g KERNEL_MAJOR_MINOR="5.4" # Major and minor versions of this kernel
#KERNELBRANCH='branch:pi-5.4-vs680'
KERNELBRANCH='branch:pi-5.4-vs680-hdmi'
KERNELDIR='linux-vs680'
KERNELPATCHDIR='legacy'
ATF_COMPILE="no"

BOOTSOURCE='https://github.com/BPI-SINOVOIP/pi-u-boot.git'
BOOTBRANCH='branch:v2019.10-vs680'
#BOOTCONFIG="vs680_spi_boot_defconfig"
BOOTDIR='u-boot-vs680'
BOOTSCRIPT='boot-vs680.cmd:boot.cmd'
BOOTENV_FILE='vs680.txt'
UBOOT_TARGET_MAP=';;u-boot.bin'

family_tweaks() {
	echo "BPI: do family_tweaks"
	chroot_sdcard ldconfig
	#chroot_sdcard apt-get install chromium
	if [[ -f "$SDCARD/etc/pulse/default.pa" ]]; then
		echo "BPI: do family_tweaks:/etc/pulse/default.pa"
		grep module-udev-detect "$SDCARD/etc/pulse/default.pa"
		cp -a "$SDCARD/etc/pulse/default.pa" "$SDCARD/etc/pulse/default.pa.org"
		sed "s/load-module module-udev-detect tsched=0/load-module module-udev-detect tsched=1 tsched_buffer_size=1024/g" -i  "$SDCARD/etc/pulse/default.pa";
		grep module-udev-detect "$SDCARD/etc/pulse/default.pa"

	else
		display_alert "Can't find pulseaudio config" "${BOARD} - family_tweaks" "warn"
	fi
	true
}

# @TODO: rpardini: this is leaking into the host system (/usr/local), let's not
compile_sl1620_bootgen() {
	# Source code checkout
	echo "compile_sl1620_bootgen"
}

uboot_custom_postprocess() {
	echo "uboot_custom_postprocess"
}

write_uboot_platform() {
	echo "write_uboot_platform"
	#echo dd if=$SRC/packages/blobs/vs680/bpi-m6-tzk-4MB.bin of=$2 bs=512 seek=1 conv=notrunc
	#dd if=$SRC/packages/blobs/vs680/bpi-m6-tzk-4MB.bin of=$2 bs=512 seek=1 conv=notrunc
	#echo "dd if=$1/u-boot.bin of=$2 bs=1k seek=2048 status=noxfer > /dev/null 2>&1"
	#dd if=$1/u-boot.bin of=$2 bs=1k seek=2048 status=noxfer > /dev/null 2>&1
}

family_tweaks_bsp() {
D=sl1620v4
	echo "BPI: family_tweaks_bsp --- START ---"
	for IN in `ls $SRC/packages/bsp/$D/*.tgz` ; do
	  MNTDIR=$destination

	  echo "tar xf $IN --keep-directory-symlink -C $MNTDIR"
	  tar xf $IN --keep-directory-symlink -C $MNTDIR
	done
	ldconfig
	echo "BPI: family_tweaks_bsp ---  END  ---"
}


create_partition_table() {
echo "BPI: create_partition_table"
echo "BPI:Partitioning the SD image..."
run_host_command_logged gdisk "${SDCARD}".raw << EOF
o
Y
x
l
2
m

n
1
32768
+16M
0700
c
factory_setting

n
2

+1M
0700
c
2
key_a

n
3

+7M
0700
c
3
tzk_a

n
4

+1M
0700
c
4
key_b

n
5

+7M
0700
c
5
tzk_b

n
6

+16M
0700
c
6
bl_a

n
7

+16M
0700
c
7
bl_b

n
8

+32M
0700
c
8
boot_a

n
9

+32M
0700
c
9
boot_b

n
10

+32M
0700
c
10
firmware_a

n
11

+32M
0700
c
11
firmware_b

n
12

+8316M
0700
c
12
rootfs_a

n
13

+64M
0700
c
13
rootfs_b

n
14

+16M
0700
c
14
fastlogo_a

n
15

+16M
0700
c
15
fastlogo_b

n
16

+2M
0700
c
16
devinfo

n
17

+2M
0700
c
17
misc

n
18

+512M
0700
c
18
home

p
w
Y
EOF
}

post_create_partitions() {
echo "BPI: post_create_partitions"
declare -g -i rootpart
rootpart=12
echo "BPI: rootpart=$rootpart"


}

prepare_root_device() {
echo "BPI: prepare_root_device"

D=sl1620v4

ls -al /dev/loop*

ls -al  "${SDCARD}".raw

OUTPUT="${SDCARD}".raw

ls -al  "$OUTPUT"


run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/sd1.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 1 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/key.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 2 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc
run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/tzk.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 3 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc
#
run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/key.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 4 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc
run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/tzk.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 5 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/bl.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 6 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc
run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/bl.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 7 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/boot.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 8 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc
run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/boot.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 9 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/firmware.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 10 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc
run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/firmware.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 11 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/sd13.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 13 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/fastlogo.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 14 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc
run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/fastlogo.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 15 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

run_host_command_logged gunzip -c "$SRC/packages/blobs/$D/sd18.subimg.gz" | dd bs=512 of=$OUTPUT seek=`sgdisk -i 18 $OUTPUT | grep "First sector" | awk '{print $3}'` conv=notrunc

}
